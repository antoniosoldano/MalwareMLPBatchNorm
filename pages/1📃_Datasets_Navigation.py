import os.path
import streamlit as st
import pandas as pd
from config import *
import numpy as np

st.set_page_config(
    page_title="Dataset Navigation",
    page_icon="ðŸ“ƒ",
    layout="wide",
    initial_sidebar_state="expanded"
)

option = st.selectbox(
    'Select the dataset you want to visualize',
    ('Dike Dataset', 'The Zoo'))

st.write('You selected:', option, 'dataset')

dataset_loaded = False

if option=='Dike Dataset':
    dataset_path = os.path.join(DATASET_FOLDER,DATASET_DIKE_FILENAME)
    dataset_count_path = os.path.join(DATASET_FOLDER,DATASET_DIKE_COUNT_FILENAME)

    if os.path.exists(dataset_path) and os.path.exists(dataset_count_path):
        df = pd.read_csv(dataset_path)
        df.set_index('Name')
        count = pd.read_csv(dataset_count_path)
        dataset_loaded = True
    else:
        st.error('Dataset Path not found', icon="ðŸš¨")

elif option=='The Zoo':
    dataset_path = os.path.join(DATASET_FOLDER,DATASET_THEZOO_FILENAME)
    dataset_count_path = os.path.join(DATASET_FOLDER,DATASET_THEZOO_COUNT_FILENAME)

    if os.path.exists(dataset_path) and os.path.exists(dataset_count_path):
        df = pd.read_csv(dataset_path)
        count = pd.read_csv(dataset_count_path)
        dataset_loaded = True
    else:
        st.error('Dataset Path not found', icon="ðŸš¨")
else:
    st.error('No dataset options found', icon="ðŸš¨")

if dataset_loaded:

    malware_types = np.unique(df['Malware_ClassName'].to_numpy())
    labels = st.multiselect("Choose malware type(s) to show", malware_types, malware_types)
    columns = st.multiselect("Choose columns to show", df.columns.tolist(), df.columns.tolist(), label_visibility='visible')
    main_table_data = df.loc[:, df.columns.isin(columns)].query("Malware_ClassName == @labels")
    st.dataframe(main_table_data, use_container_width=True)

    chart_data = count.query("class_name == @labels")
    col1, col2 = st.columns([4,1])
    with col1:
        st.bar_chart(chart_data, x='class_name', y='total_samples', use_container_width=True)
    with col2:
        st.dataframe(chart_data)
